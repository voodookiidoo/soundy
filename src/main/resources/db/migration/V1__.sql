CREATE SEQUENCE IF NOT EXISTS account_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS genre_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS playlist_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS track_id_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE account
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username     VARCHAR(255)                             NOT NULL,
    password     VARCHAR(255)                             NOT NULL,
    account_role VARCHAR(255)                             NOT NULL,
    CONSTRAINT account_pk PRIMARY KEY (id)
);

CREATE TABLE admin_table
(
    id INTEGER NOT NULL,
    CONSTRAINT admin_table_pk PRIMARY KEY (id)
);

CREATE TABLE app_user
(
    id       INTEGER NOT NULL,
    premium  BOOLEAN DEFAULT FALSE,
    explicit BOOLEAN DEFAULT FALSE,
    CONSTRAINT app_user_pk PRIMARY KEY (id)
);

CREATE TABLE artist
(
    id          INTEGER NOT NULL,
    description VARCHAR,
    CONSTRAINT artist_pk PRIMARY KEY (id)
);

CREATE TABLE artist2track
(
    track_id  INTEGER,
    artist_id INTEGER
);

CREATE TABLE genre
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    genre_name  VARCHAR(255),
    description VARCHAR,
    CONSTRAINT genre_pk PRIMARY KEY (id)
);

CREATE TABLE playlist
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title       VARCHAR(255),
    description VARCHAR,
    CONSTRAINT playlist_pk PRIMARY KEY (id)
);

CREATE TABLE playlist2owner
(
    playlist_id INTEGER,
    owner_id    INTEGER
);

CREATE TABLE playlist2track
(
    track_id    INTEGER,
    playlist_id INTEGER
);

CREATE TABLE playlist2user
(
    user_id     INTEGER,
    playlist_id INTEGER
);

CREATE TABLE track
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title        VARCHAR                                  NOT NULL,
    explicit     BOOLEAN DEFAULT TRUE,
    premium      BOOLEAN DEFAULT FALSE,
    genre_id     INTEGER,
    publish_date date    DEFAULT CURRENT_DATE             NOT NULL,
    CONSTRAINT track_pk PRIMARY KEY (id)
);

CREATE TABLE user2artist
(
    user_id   INTEGER,
    artist_id INTEGER
);

ALTER TABLE account
    ADD CONSTRAINT account_pk_2 UNIQUE (username);

ALTER TABLE genre
    ADD CONSTRAINT genre_pk_2 UNIQUE (genre_name);

ALTER TABLE admin_table
    ADD CONSTRAINT admin_table_account_id_fk FOREIGN KEY (id) REFERENCES account (id) ON DELETE NO ACTION;

ALTER TABLE app_user
    ADD CONSTRAINT app_user_account_id_fk FOREIGN KEY (id) REFERENCES account (id) ON DELETE NO ACTION;

ALTER TABLE artist2track
    ADD CONSTRAINT artist2track_artist_id_fk FOREIGN KEY (artist_id) REFERENCES artist (id) ON DELETE NO ACTION;

ALTER TABLE artist2track
    ADD CONSTRAINT artist2track_track_id_fk FOREIGN KEY (track_id) REFERENCES track (id) ON DELETE NO ACTION;

ALTER TABLE artist
    ADD CONSTRAINT artist_account_id_fk FOREIGN KEY (id) REFERENCES account (id) ON DELETE NO ACTION;

ALTER TABLE playlist2owner
    ADD CONSTRAINT playlist2owner_app_user_id_fk FOREIGN KEY (owner_id) REFERENCES app_user (id) ON DELETE NO ACTION;

ALTER TABLE playlist2owner
    ADD CONSTRAINT playlist2owner_playlist_id_fk FOREIGN KEY (playlist_id) REFERENCES playlist (id) ON DELETE NO ACTION;

ALTER TABLE playlist2track
    ADD CONSTRAINT playlist2track_playlist_id_fk FOREIGN KEY (playlist_id) REFERENCES playlist (id) ON DELETE NO ACTION;

ALTER TABLE playlist2track
    ADD CONSTRAINT playlist2track_track_id_fk FOREIGN KEY (track_id) REFERENCES track (id) ON DELETE NO ACTION;

ALTER TABLE playlist2user
    ADD CONSTRAINT playlist2user_app_user_id_fk FOREIGN KEY (user_id) REFERENCES app_user (id) ON DELETE NO ACTION;

ALTER TABLE playlist2user
    ADD CONSTRAINT playlist2user_playlist_id_fk FOREIGN KEY (playlist_id) REFERENCES playlist (id) ON DELETE NO ACTION;

ALTER TABLE track
    ADD CONSTRAINT track_genre_id_fk FOREIGN KEY (genre_id) REFERENCES genre (id) ON DELETE NO ACTION;

ALTER TABLE user2artist
    ADD CONSTRAINT user2artist_app_user_id_fk FOREIGN KEY (user_id) REFERENCES app_user (id) ON DELETE NO ACTION;

ALTER TABLE user2artist
    ADD CONSTRAINT user2artist_artist_id_fk FOREIGN KEY (artist_id) REFERENCES artist (id) ON DELETE NO ACTION;
